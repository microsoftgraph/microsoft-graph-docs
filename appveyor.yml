version: 1.0.{build}
clone_depth: 1
build_script:
- ps: nuget install MarkdownScanner.BinaryTools
test_script:
- ps: >-
    $pkgfolder = Get-ChildItem -Directory | Where-Object {$_.name -match "MarkdownScanner.BinaryTools."}

    $apidocs = $pkgfolder.name + "\tools\apidocs.exe"

    # check links at the root of the repository
    
    $parms = "check-links", "--appveyor-url", $env:APPVEYOR_API_URL, "--path", $env:APPVEYOR_BUILD_FOLDER, "--relax-string-validation", "--ignore-warnings"

    & $apidocs $parms

    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

    # check documents in each api reference set

    $path = $env:APPVEYOR_BUILD_FOLDER + "\api-reference"

    $reference_paths = [System.IO.Directory]::GetDirectories($path)

    ForEach($reference in $reference_paths)

    {

    # if ([string]::IsNullOrEmpty($env:APPVEYOR_PULL_REQUEST_NUMBER)) 
    
    {
    
      # Run the checks on all files
  
      $parms = "check-docs", "--appveyor-url", $env:APPVEYOR_API_URL, "--path", $reference, "--relax-string-validation", "--ignore-warnings"

    }
    
    #else 
    
    #{
    
      # Run the checks only on files changed since the master branch
    
     # $parms = "check-docs", "--appveyor-url", $env:APPVEYOR_API_URL, "--path", $reference, "--relax-string-validation", "--ignore-warnings", "--changes-since-branch-only", $env:APPVEYOR_REPO_BRANCH
    
    #}

    & $apidocs $parms    

    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

    }
notifications:
- provider: Slack
  incoming_webhook: https://hooks.slack.com/services/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
  channel: '#build-status'
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false